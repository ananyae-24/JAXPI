[22:56:22 - main - INFO] Waiting for JIT...
{'params': {'Dense_0': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_1': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_2': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_3': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_4': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_5': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_6': {'bias': Traced<ShapedArray(float32[1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[1]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[1]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,1]), None)
    recipe = LambdaBinding())}, 'Embedding_0': {'FourierEmbs_0': {'kernel': Traced<ShapedArray(float32[3,128])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[3,128])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[3,128])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[3,128]), None)
    recipe = LambdaBinding()}}}} Traced<ShapedArray(float32[1024,2])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
{'params': {'Dense_0': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.2563188, 2.5836034, 2.9069004, 2.7145636, 2.8186815, 2.4852207,
       2.6306145, 2.4324856, 2.6147509, 3.0908947, 2.6251175, 2.8688874,
       2.681417 , 3.3227046, 2.8733425, 2.5952735, 2.8354797, 3.047976 ,
       2.6297154, 2.9291477, 2.8627586, 2.7999535, 2.6371458, 2.6020083,
       2.9809556, 2.3468723, 2.414213 , 2.1548474, 2.6565392, 2.513999 ,
       2.7850547, 3.1353364, 2.9091377, 2.6238856, 3.1584349, 2.635889 ,
       3.032677 , 2.7995763, 2.6378393, 2.679029 , 2.8371096, 2.3544483,
       2.6267695, 3.0527835, 2.890698 , 3.124846 , 2.8998346, 2.5372972,
       2.7407596, 2.4940906, 2.6272655, 2.837903 , 2.5696692, 2.9313755,
       2.665876 , 2.7017481, 2.6167693, 3.1395173, 2.9558976, 2.4886112,
       2.5748177, 2.5844176, 2.982604 , 2.454807 , 2.7859988, 2.9920607,
       2.8418596, 2.953764 , 3.106355 , 2.8586888, 2.241395 , 2.9101434,
       3.174282 , 2.716585 , 2.955101 , 2.4172702, 2.897276 , 2.190764 ,
       2.6533375, 2.4516   , 2.9675136, 2.6515627, 2.8030558, 2.4568572,
       2.3595314, 2.9457467, 2.5710413, 2.1670966, 2.4425626, 2.842569 ,
       2.7886508, 2.9798584, 2.9304166, 2.899245 , 3.144816 , 2.7962458,
       3.1430392, 2.652807 , 2.3937192, 2.595406 , 2.5588348, 3.0800238,
       3.1950614, 2.9896283, 2.5455322, 2.9273627, 3.2736263, 2.3846152,
       2.3547306, 3.0199957, 3.057397 , 2.5577564, 2.8928375, 2.837844 ,
       2.819681 , 3.0291982, 2.6852832, 2.643128 , 2.7671435, 2.785667 ,
       2.3342605, 2.5176048, 2.5978763, 2.5671117, 3.2576046, 2.7232628,
       2.847819 , 2.8477068, 2.6873057, 3.1457973, 2.616594 , 3.1700783,
       2.8566031, 2.9941657, 2.2918117, 3.0243511, 2.7962716, 2.5630577,
       2.1382313, 2.896637 , 2.8323379, 2.7693915, 2.8189023, 2.9231725,
       2.653557 , 2.7873895, 2.859545 , 2.82035  , 3.202536 , 2.5121822,
       2.9144647, 2.9337177, 3.0522745, 2.552543 , 2.9046147, 3.3181653,
       2.2817147, 2.826439 , 2.446194 , 2.6387107, 2.2019415, 2.4454768,
       2.4531872, 2.689515 , 2.6117067, 2.7456627, 3.1007097, 2.3711162,
       3.524012 , 2.9982176, 2.5791686, 2.6675432, 2.520996 , 2.5378294,
       3.075244 , 2.6106164, 3.0883217, 2.5357587, 2.8819287, 3.0375335,
       2.959601 , 3.2440639, 3.1750622, 2.3836722, 2.464106 , 3.1940038,
       2.5078645, 2.8300683, 2.7011833, 2.642298 , 2.5871425, 2.974532 ,
       2.688084 , 2.789428 , 2.7903795, 2.599002 , 2.4947836, 2.0655017,
       2.3628438, 2.6225595, 2.805206 , 2.499834 , 2.6305714, 2.8516002,
       2.6623664, 2.4983635, 2.1296182, 2.977415 , 2.8155737, 2.378529 ,
       2.1499624, 3.2969522, 2.80045  , 2.9698172, 2.4869175, 2.931919 ,
       2.2568293, 2.7759569, 2.7315862, 2.9817472, 2.700956 , 2.2481115,
       2.9009573, 3.1008232, 2.5707183, 2.5895278, 2.694458 , 3.148496 ,
       2.8687353, 2.4612126, 2.9099069, 2.6631055, 2.7506874, 3.0818453,
       2.2799368, 2.4895294, 2.8353436, 2.4458852, 2.878836 , 3.528126 ,
       2.5121582, 2.5448043, 2.8512893, 3.1537054, 2.628867 , 2.5023727,
       2.5626779, 3.1772943, 2.594663 , 2.574381 , 2.7311   , 2.5821114,
       2.5049624, 3.3982332, 2.8230639, 2.3608909], dtype=float32), array([[ 0.04418123, -0.02061799,  0.01598931, ...,  0.00273671,
         0.01408956,  0.02695186],
       [ 0.02507158, -0.03709692,  0.00795954, ...,  0.01758809,
        -0.01010006,  0.02343235],
       [ 0.01937263,  0.01751952,  0.015848  , ...,  0.00884262,
         0.0210817 , -0.0276284 ],
       ...,
       [ 0.02830878, -0.00604725,  0.00290689, ...,  0.00910752,
        -0.00742051, -0.03198813],
       [-0.03039791,  0.00527723, -0.04010518, ...,  0.02801957,
        -0.03161162,  0.01715128],
       [ 0.01612435,  0.04199754, -0.04392627, ...,  0.00128673,
         0.0475787 , -0.00227426]], dtype=float32))}, 'Dense_1': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.5265877, 2.9624617, 2.4117885, 2.6812873, 2.4244583, 2.9255238,
       2.3878114, 2.470933 , 2.4338224, 3.0597959, 2.677831 , 2.5393853,
       2.5248387, 2.465815 , 2.5488532, 2.3830807, 2.916014 , 2.5541275,
       2.7666187, 2.59428  , 3.0236666, 2.7348218, 2.8284583, 2.2081053,
       2.2031252, 2.4433057, 2.8207521, 2.5198183, 3.0244339, 3.1771083,
       2.6439948, 2.6299338, 2.7297382, 2.7052648, 2.5155902, 2.5681295,
       2.6971817, 3.2426128, 2.7833462, 2.3236005, 3.078979 , 2.532689 ,
       3.2767277, 2.6815825, 2.7372265, 2.974615 , 2.291159 , 2.7360406,
       2.8059952, 2.2706523, 2.5957804, 2.8494205, 2.9615335, 2.5930514,
       2.8970892, 3.1178193, 2.9946709, 2.7285533, 2.6040244, 2.7493417,
       2.7133722, 2.763298 , 2.640218 , 2.6462402, 2.614296 , 2.876021 ,
       2.48827  , 3.073802 , 2.597999 , 2.2096984, 3.037797 , 2.84127  ,
       2.5685284, 2.6418247, 2.5969172, 2.8226376, 2.542044 , 2.8784027,
       2.7721982, 3.1830459, 2.6410933, 2.4932752, 2.5138824, 2.6564   ,
       2.8282943, 2.6290045, 2.5687404, 2.8204954, 2.9798048, 2.8338554,
       2.3260934, 2.7407615, 2.6540167, 3.280287 , 2.6039443, 3.2176185,
       2.976108 , 2.815475 , 2.6932251, 2.7773447, 2.5717173, 2.4388   ,
       2.76524  , 2.860415 , 2.9248486, 2.4337275, 2.3453133, 2.400325 ,
       2.6582398, 2.707717 , 3.0006163, 2.7992783, 3.2005014, 2.4940143,
       2.4178221, 2.1992383, 2.880217 , 2.5363882, 2.2228997, 2.7758718,
       2.8586364, 2.8920684, 2.3989289, 2.683792 , 2.6598048, 2.3769536,
       2.7676835, 2.4499612, 3.1399016, 2.9249425, 2.51689  , 2.873137 ,
       2.188923 , 2.536271 , 2.4072673, 2.7006526, 2.8065495, 2.798651 ,
       2.6372144, 2.7686543, 2.7616813, 3.6791945, 3.1218653, 2.6938019,
       2.5269985, 2.9438553, 2.8359385, 2.9646592, 2.6593132, 2.3359385,
       3.4053335, 2.2099757, 2.8042133, 2.982811 , 2.8766708, 2.556318 ,
       2.4559536, 2.82295  , 2.6212482, 2.6107426, 3.0194468, 2.587544 ,
       2.8418844, 3.0359635, 2.6563215, 2.4559007, 2.7862465, 2.3686676,
       2.8169868, 2.489132 , 3.1737478, 2.6950989, 3.0339334, 2.4481823,
       2.629313 , 2.6793869, 3.050201 , 2.4094987, 2.7539225, 2.6222568,
       2.6634288, 2.4969347, 2.5854864, 2.8025036, 3.0688407, 2.930646 ,
       2.8266437, 2.6690085, 2.481625 , 2.8702233, 2.3090265, 2.7058501,
       2.92603  , 2.537424 , 3.0018592, 2.390624 , 2.886316 , 3.2046688,
       2.702973 , 2.8570368, 2.7407894, 2.7185702, 2.6401374, 2.768933 ,
       2.6263573, 2.4605289, 2.4252005, 2.7890792, 2.5203054, 2.8797712,
       3.0052423, 2.4333732, 2.3708978, 2.6011815, 2.933917 , 2.7843404,
       2.7073913, 3.1816287, 2.9723153, 2.3814373, 2.9411602, 2.9942255,
       2.3377202, 2.5597582, 2.6293817, 2.6738548, 3.058129 , 2.606506 ,
       2.6313062, 2.6273098, 2.739752 , 2.497267 , 2.872016 , 2.289144 ,
       3.1690063, 2.812204 , 2.3649647, 2.8488388, 2.56701  , 2.3487763,
       2.830295 , 2.5983815, 2.3862648, 2.3553317, 2.8802087, 2.3907213,
       2.2716856, 2.8987083, 2.7471657, 2.7238767, 2.895297 , 2.7647033,
       2.4008758, 2.441526 , 3.1135569, 2.9473886], dtype=float32), array([[ 0.04149048, -0.01290824,  0.00420948, ..., -0.03110252,
        -0.0081331 ,  0.02322019],
       [ 0.01848319,  0.00888428, -0.02207559, ..., -0.02283635,
        -0.01136763, -0.01397207],
       [ 0.00945528,  0.03433459, -0.01066482, ..., -0.03808977,
        -0.00810684,  0.0179726 ],
       ...,
       [ 0.00694348, -0.0022626 , -0.01566392, ..., -0.01361472,
        -0.04374657,  0.02016209],
       [ 0.00328382,  0.00506705,  0.00144829, ..., -0.00028464,
        -0.00566674,  0.00727164],
       [ 0.04041572,  0.02479109,  0.00756154, ...,  0.02376161,
         0.01373955,  0.00569312]], dtype=float32))}, 'Dense_2': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.702403 , 3.041099 , 3.1320038, 2.7242618, 2.4322867, 2.7572036,
       2.6450033, 2.974406 , 2.655041 , 2.8255215, 3.200871 , 2.9567466,
       2.7030282, 2.5739622, 2.3507385, 2.7787516, 2.825121 , 2.4637465,
       3.4734359, 2.4361513, 2.9006004, 2.688933 , 2.8138885, 2.9028513,
       2.8632731, 3.073474 , 3.4402251, 2.6649477, 2.2386115, 2.5966625,
       2.7687314, 2.8446956, 2.81667  , 2.860536 , 2.9466383, 2.9004889,
       2.7635694, 3.0003884, 2.4886603, 2.8186848, 2.5180998, 2.5196662,
       2.4450712, 2.2532442, 2.3790033, 2.5485785, 2.5764005, 2.5811687,
       2.7266908, 2.8476138, 2.7036605, 2.8237927, 3.124595 , 2.5573533,
       2.7491777, 2.4437292, 2.1384754, 2.4192054, 2.632225 , 2.9166741,
       2.6068137, 2.288281 , 2.6275618, 3.0388753, 2.800165 , 2.6333618,
       2.7655663, 2.706317 , 2.3403158, 2.8034515, 2.4811506, 2.6129532,
       2.634403 , 2.7847795, 2.999834 , 2.72119  , 2.7359293, 2.5086846,
       3.2205148, 2.7005036, 2.321353 , 2.7590938, 2.6904438, 2.5674405,
       2.2238522, 2.8994799, 2.8700109, 3.096626 , 2.680642 , 2.34496  ,
       2.4018214, 2.2970958, 2.5427752, 2.8299563, 2.0113413, 2.8345013,
       3.2110112, 2.3869529, 3.160643 , 2.6645117, 2.8390257, 3.2066288,
       2.556331 , 2.7888691, 2.793083 , 2.7200222, 2.4204223, 2.7077465,
       3.1450298, 2.7035146, 2.4145913, 2.624951 , 3.234974 , 2.4450493,
       3.0666995, 2.9013114, 2.5585315, 2.8911257, 2.5975327, 2.7769585,
       2.6088603, 3.000176 , 2.3079352, 3.0413067, 2.5504594, 2.8944068,
       2.82764  , 2.8034143, 2.815512 , 2.847084 , 3.0607886, 2.8573785,
       2.0860739, 2.955484 , 2.1993792, 2.5933526, 2.3748164, 2.4419723,
       2.383847 , 2.6666515, 2.7490368, 2.5867004, 2.7810917, 2.4943943,
       2.6290534, 2.79612  , 2.3404543, 2.6543732, 3.2516544, 2.3829944,
       2.6837866, 2.7508397, 2.3391485, 2.4725602, 2.6700153, 2.6218421,
       2.846015 , 3.001326 , 2.6617355, 2.280019 , 2.6101737, 3.0295546,
       2.5584288, 2.92394  , 2.6654217, 2.5399144, 2.5931902, 2.4916506,
       2.7646651, 2.563798 , 2.7090287, 3.0237799, 2.7279515, 2.7905583,
       2.8264413, 2.8216558, 2.30062  , 2.9216971, 2.9711332, 2.9218397,
       2.6091154, 2.4877589, 2.543815 , 2.7709293, 2.6901007, 2.7111912,
       2.795189 , 2.242608 , 2.629687 , 2.5260859, 2.9681873, 2.586896 ,
       3.2637484, 2.320116 , 2.479263 , 2.5575333, 3.0591176, 2.6458194,
       2.5102599, 2.8955145, 2.9225602, 2.486579 , 2.754297 , 2.6924777,
       2.752296 , 2.8633618, 2.5124252, 2.7610364, 2.6564023, 2.5813508,
       2.6711345, 2.862247 , 2.839167 , 3.1154096, 1.9928102, 3.0129476,
       3.1284277, 2.41809  , 2.6424034, 2.8309534, 2.278813 , 2.7563417,
       3.3773232, 2.4450839, 3.1133406, 2.8101902, 3.3682775, 2.557815 ,
       2.7575955, 2.5510461, 3.186972 , 2.4192448, 2.9218912, 2.6441221,
       2.6261597, 2.5029395, 2.7180867, 2.5737562, 3.1628587, 3.09333  ,
       2.5085757, 2.532501 , 2.3237467, 3.114715 , 2.8647823, 2.5194542,
       2.7168756, 2.8764436, 2.8317447, 3.253748 , 3.4981744, 2.815955 ,
       2.6801069, 3.1485696, 3.2688036, 2.7241485], dtype=float32), array([[-0.01037234, -0.02037404,  0.01948936, ...,  0.03503494,
         0.01792284,  0.01148113],
       [ 0.0117123 , -0.01673081, -0.01844395, ..., -0.02376822,
        -0.01442539,  0.02463797],
       [-0.00225343, -0.03221179,  0.0192594 , ..., -0.00079439,
         0.00675713, -0.02590205],
       ...,
       [ 0.04435895,  0.0386849 , -0.00906324, ...,  0.01396776,
         0.01453968, -0.01142432],
       [ 0.03226264,  0.01913193,  0.02004497, ..., -0.02578229,
        -0.00172053,  0.00614018],
       [ 0.02499906,  0.00964729,  0.00838251, ..., -0.02033031,
        -0.01924009,  0.01857594]], dtype=float32))}, 'Dense_3': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.8788934, 2.6764994, 2.2324677, 2.222607 , 2.8685422, 2.5445018,
       2.6743064, 2.4937139, 2.2975965, 2.921866 , 2.9826212, 2.4741774,
       2.6702719, 2.6081808, 2.7546296, 3.1536603, 2.6563697, 2.907514 ,
       2.5027866, 2.3786564, 2.6968625, 2.350427 , 2.6771917, 2.7507958,
       2.760279 , 2.8117537, 2.9728065, 2.889191 , 3.3312185, 2.804304 ,
       2.3914073, 2.4501667, 2.962934 , 2.8093593, 2.5978582, 2.8783503,
       3.3457654, 2.8819656, 2.4592226, 2.6463013, 2.6817136, 2.5335763,
       2.3739355, 2.45537  , 2.8877027, 2.8141894, 2.6576438, 2.6086802,
       2.3242424, 2.635982 , 2.8893266, 2.6968222, 2.5473237, 2.808012 ,
       2.7831614, 2.5952482, 3.1383734, 2.3514218, 2.6114094, 2.4940584,
       2.6440647, 2.7656245, 2.6343873, 3.201652 , 3.1365616, 2.44799  ,
       2.8025384, 2.9662719, 2.8780148, 2.6398647, 2.709832 , 2.6538656,
       2.9041748, 2.5867996, 2.4030845, 2.4212954, 2.539828 , 3.041136 ,
       2.833682 , 2.5380707, 2.2729733, 2.6442134, 2.6367347, 2.883442 ,
       2.70146  , 2.483674 , 2.9844105, 3.0965972, 2.67755  , 2.7591503,
       2.600099 , 2.3444953, 2.3979638, 2.66748  , 2.5000308, 2.4376063,
       2.7538207, 2.4657435, 2.6896918, 2.901441 , 3.0144544, 3.0082998,
       2.4174922, 2.478012 , 3.1383278, 2.589668 , 3.1198523, 3.1678927,
       2.7130508, 2.823459 , 2.2413113, 2.60922  , 2.7522836, 2.2550266,
       2.7783504, 2.760431 , 2.4361975, 2.7093902, 3.0048788, 2.7397165,
       2.8950453, 2.6055915, 2.35678  , 2.6337628, 3.0636945, 2.4580479,
       2.972682 , 2.8891058, 2.6549883, 2.4760773, 3.0230265, 2.5380304,
       2.5047135, 2.1072326, 2.9385006, 2.7578318, 2.8551402, 2.516843 ,
       2.806438 , 2.6961355, 2.446362 , 2.7933736, 2.8026118, 2.4480512,
       2.5799716, 2.3856897, 2.8260763, 2.9569845, 2.5034044, 2.9419084,
       2.4571848, 2.7125626, 2.5475621, 2.4370577, 3.0258255, 2.9914517,
       2.8576674, 3.0621111, 2.784203 , 2.8283758, 2.5510519, 3.082478 ,
       2.734035 , 2.8669581, 2.8097353, 2.860666 , 2.8743892, 2.87853  ,
       2.562218 , 2.7163818, 2.7491906, 2.7811408, 3.2434878, 2.664125 ,
       2.6575565, 3.1999812, 2.757088 , 3.2242305, 2.594927 , 3.4641366,
       2.9483075, 2.666847 , 3.0023031, 3.2588062, 2.8626928, 2.6524568,
       2.7660813, 2.4777362, 2.5209002, 2.6623378, 2.7530696, 3.2307913,
       2.6329942, 3.2496   , 2.5671842, 2.6009173, 2.7873187, 2.5745158,
       2.6017826, 2.891611 , 2.5820346, 2.4390154, 3.2896411, 3.0041528,
       2.3791013, 2.8142881, 2.220358 , 2.5813994, 2.4859395, 2.9431267,
       2.6539688, 2.6479769, 2.5021942, 2.4175801, 2.7716305, 2.6342626,
       2.8660123, 2.8268435, 3.0063303, 2.6507146, 2.5184696, 2.6941137,
       3.143869 , 2.5205896, 3.3395705, 3.276567 , 2.7881904, 2.640048 ,
       2.9125507, 2.8092177, 3.4830878, 2.3315334, 2.9383836, 2.7570355,
       3.2036057, 2.8605647, 2.3976433, 2.6625965, 2.8711445, 2.6589913,
       2.9212804, 2.8127522, 2.462703 , 2.7468379, 2.973032 , 2.7152538,
       2.407504 , 2.592596 , 2.993463 , 2.9088426, 3.0446692, 3.1258612,
       2.7456956, 2.645207 , 2.869771 , 3.160295 ], dtype=float32), array([[-0.01590439, -0.0485252 , -0.0313522 , ..., -0.01978512,
         0.02055966, -0.00731556],
       [ 0.03686621,  0.03696284, -0.00556294, ..., -0.00625864,
        -0.04690926,  0.03629258],
       [-0.00905738,  0.0413185 ,  0.00352837, ..., -0.01549464,
        -0.00571201, -0.01556693],
       ...,
       [ 0.00724333,  0.01914336,  0.03821257, ...,  0.0283773 ,
         0.01192717,  0.00373163],
       [ 0.00636177, -0.01678142, -0.02787855, ..., -0.02980321,
         0.01491882,  0.01925917],
       [ 0.03042316,  0.0182976 ,  0.04424233, ...,  0.00550604,
         0.00468971, -0.00027755]], dtype=float32))}, 'Dense_4': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.559863 , 3.335627 , 2.1446195, 2.3175805, 2.9175444, 2.4548492,
       3.0181158, 2.674433 , 2.4559526, 2.644361 , 2.2769303, 2.9279447,
       2.6931138, 2.4459667, 2.4757633, 2.9321585, 2.4789383, 3.0381944,
       3.0680685, 2.8377957, 2.5330377, 2.7181454, 2.6315808, 2.6383412,
       2.5206404, 3.124782 , 2.740231 , 3.0904775, 3.194435 , 2.8586905,
       2.4884703, 2.6638272, 2.867837 , 2.9758654, 2.5406308, 2.8833766,
       3.0665455, 2.224509 , 2.997528 , 2.6696475, 3.0094442, 2.5575511,
       2.70836  , 3.1510296, 2.892401 , 3.2567863, 2.6342585, 3.2609653,
       2.4382124, 2.301667 , 2.7329907, 2.6733809, 2.8299384, 2.8854017,
       2.8172503, 2.9378605, 3.1120944, 2.3091443, 2.7678928, 2.3186991,
       2.4488704, 2.6814387, 2.5197163, 2.3611286, 2.618612 , 2.6962502,
       2.6390886, 2.5825648, 2.7753007, 2.7508771, 2.7220101, 2.9111757,
       2.6765351, 2.5353026, 2.3583121, 2.3882816, 2.9703264, 2.8144183,
       2.3924458, 2.745412 , 2.4045484, 2.9658303, 2.6570475, 2.736863 ,
       2.725303 , 2.749082 , 2.9816322, 3.2220616, 2.7074375, 2.6975327,
       2.1911335, 2.9139647, 2.0990047, 3.433404 , 3.0944004, 2.5753093,
       2.9669583, 2.398486 , 2.2889252, 3.1181736, 2.5781817, 2.76433  ,
       2.769084 , 3.1502376, 2.3663783, 2.7920847, 2.9279113, 2.871696 ,
       2.9021804, 3.1328526, 2.6128032, 2.817918 , 2.687711 , 3.4110827,
       2.5993304, 2.9037328, 2.7994869, 2.1642706, 2.409594 , 2.941108 ,
       2.7133138, 3.0374715, 2.8974473, 2.926363 , 2.6600235, 2.7274249,
       2.6973803, 2.6967173, 2.3995142, 2.623683 , 2.283503 , 2.6500936,
       2.6055748, 2.6093175, 2.4867666, 2.886166 , 3.0664263, 2.541009 ,
       2.5913572, 2.9221125, 2.5775402, 3.1496935, 2.7442508, 3.0475063,
       2.5926104, 2.930571 , 3.2048967, 3.1913543, 2.6502244, 3.2595425,
       2.732518 , 2.7706547, 2.167315 , 2.8811398, 2.7469473, 3.1612577,
       2.7625911, 2.2907612, 2.3906763, 3.1671596, 2.6302261, 3.1373649,
       2.5194845, 2.3989513, 2.5903492, 2.4011838, 2.59329  , 2.72707  ,
       2.767252 , 2.968596 , 2.7567773, 2.6352005, 2.4932437, 2.6581328,
       2.7979999, 2.515554 , 2.9495423, 2.4374197, 2.409309 , 2.2317863,
       3.16904  , 2.6299984, 2.1537707, 2.7053113, 2.8475595, 2.9465246,
       2.5855274, 2.6827998, 2.424777 , 2.4428704, 2.7346802, 2.6641967,
       3.1557655, 3.1057844, 2.7868173, 2.753411 , 3.079516 , 2.8622804,
       2.5877547, 2.4854188, 3.1019278, 2.5231204, 2.8811126, 2.9202185,
       2.8492012, 2.507652 , 3.0445685, 2.6292195, 2.7851372, 2.3555932,
       2.4278533, 2.4215481, 2.6405342, 2.6093135, 2.1755114, 2.3644166,
       2.9853868, 2.4769266, 2.5096226, 2.950513 , 2.875506 , 2.6196449,
       2.7413545, 2.7606509, 3.1740777, 2.7859118, 3.0674505, 3.1173868,
       2.8447678, 2.4396086, 2.7768767, 2.7837856, 2.553978 , 2.6536837,
       2.9791107, 2.5826893, 2.7576456, 2.3103065, 2.7491002, 2.7552679,
       2.4741678, 2.6487417, 3.1150951, 2.7563381, 2.9215589, 3.052007 ,
       3.008122 , 2.55572  , 2.6750927, 2.9004946, 2.5284193, 2.4362211,
       2.6135411, 3.1824775, 3.0346408, 2.6720314], dtype=float32), array([[ 0.0265922 ,  0.00853601,  0.02227373, ..., -0.01564793,
        -0.03163821, -0.01454067],
       [ 0.04005707, -0.01549071,  0.03576782, ...,  0.01088217,
         0.04138743, -0.00464118],
       [-0.02428369,  0.03396064, -0.01803724, ...,  0.02844674,
        -0.03119253, -0.02678572],
       ...,
       [-0.01684134, -0.02024154,  0.02046954, ..., -0.00520709,
         0.0210096 , -0.03168961],
       [-0.00699604,  0.02770859,  0.0059891 , ..., -0.01896497,
        -0.0096269 , -0.01511481],
       [ 0.00682668, -0.01017091, -0.03522074, ...,  0.0055562 ,
        -0.02419988, -0.00593013]], dtype=float32))}, 'Dense_5': {'bias': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0.], dtype=float32), 'kernel': (array([2.4288425, 2.7188883, 2.196312 , 2.9623275, 2.8973126, 2.5207415,
       2.0551698, 2.4992647, 2.6893964, 2.891215 , 2.8183844, 2.8752153,
       3.5624735, 3.473794 , 2.5629323, 2.440804 , 2.6132421, 3.1317053,
       2.4273067, 2.7034025, 3.1896076, 2.960483 , 2.673175 , 2.944691 ,
       2.832127 , 2.8156428, 2.3893557, 2.7143445, 2.7153957, 3.366682 ,
       2.4779344, 2.655342 , 2.821251 , 3.0485525, 2.8229527, 3.189818 ,
       2.475037 , 2.624372 , 2.457223 , 2.7211876, 2.6909485, 2.596093 ,
       2.913748 , 2.7635632, 2.8407388, 3.137959 , 2.5072918, 2.865084 ,
       3.0643315, 2.302296 , 2.737548 , 2.7229755, 2.433987 , 2.2428684,
       2.8465738, 2.3918762, 2.7405038, 2.552277 , 2.9184132, 2.6313071,
       2.513827 , 2.3580446, 2.9737165, 2.4659426, 2.5895457, 2.811751 ,
       2.3334455, 2.4777684, 2.447192 , 2.676854 , 2.6985807, 2.4806647,
       2.534512 , 2.507535 , 2.9318285, 2.7373228, 2.8945518, 2.7172732,
       3.1549034, 3.080851 , 2.8965802, 2.8223584, 2.2990527, 3.0385928,
       2.691015 , 2.3604329, 2.717647 , 2.6850004, 2.5364292, 2.6446896,
       2.7685912, 2.7110472, 2.0827174, 3.0763054, 2.932681 , 2.3929477,
       2.8952146, 2.7775874, 2.5826328, 2.500908 , 3.167039 , 2.8117871,
       2.5395193, 3.4651322, 2.9584928, 2.4340324, 2.7993643, 2.5609076,
       2.518269 , 3.0915058, 2.7058601, 2.9635854, 2.595211 , 3.1123183,
       2.8681896, 2.8882587, 3.037269 , 2.85982  , 2.806294 , 2.6341894,
       2.7126303, 2.4338272, 2.9290662, 2.893485 , 2.8574471, 2.5006752,
       2.8224843, 3.0082967, 2.372232 , 2.6555495, 2.637175 , 2.6307602,
       2.7373774, 2.594611 , 2.5167577, 2.5911512, 2.4211168, 2.8177156,
       2.6983263, 3.1016026, 2.6033878, 2.6931715, 2.4527135, 3.0247414,
       2.6261518, 2.8523002, 2.8628879, 2.8031397, 2.6875644, 2.3390574,
       2.5730019, 2.9672732, 2.9018226, 2.527551 , 2.4308016, 2.2409647,
       3.0335112, 3.1823902, 2.8271933, 2.809154 , 2.3002129, 2.9375753,
       2.562112 , 2.6446826, 2.685357 , 2.898045 , 2.7047045, 2.5767405,
       3.3553305, 2.497526 , 2.6561751, 2.7858145, 2.657099 , 2.3543942,
       2.7067914, 2.1234674, 2.4986105, 2.7447183, 2.758846 , 2.5822725,
       2.6385665, 2.511162 , 3.0563083, 2.731394 , 2.8389816, 2.831837 ,
       2.310908 , 2.9948006, 2.7519917, 2.6865122, 2.820898 , 2.8977928,
       2.539059 , 2.7466035, 2.3011897, 2.4933705, 2.9222639, 2.7432337,
       2.484933 , 2.3978004, 2.496491 , 3.0382187, 2.629294 , 2.7979927,
       2.6480196, 2.6555734, 2.4447198, 2.7872655, 2.9145002, 2.6316738,
       2.5017583, 2.9094517, 2.8671746, 2.3324347, 3.0153759, 2.2091994,
       2.901703 , 2.2438724, 3.0140085, 2.3873572, 2.7815108, 2.6305978,
       2.9420145, 2.6697452, 2.5835931, 2.712536 , 2.4653533, 2.6597226,
       3.088805 , 2.89834  , 3.055944 , 2.6543796, 2.4288971, 2.7709346,
       2.444624 , 2.7334201, 2.864162 , 2.8085535, 3.287067 , 3.0068715,
       2.6594849, 2.6812823, 2.4848957, 2.896825 , 2.458625 , 2.8926973,
       2.8301358, 2.7750626, 2.395508 , 2.7529685, 2.6736925, 2.7945256,
       2.8769379, 2.4296293, 3.2742105, 2.4229035], dtype=float32), array([[ 0.02858981,  0.00368801, -0.01964631, ..., -0.02616174,
         0.00654784,  0.05328177],
       [-0.01113988, -0.01090906, -0.02126901, ...,  0.0096512 ,
         0.00637408, -0.01240073],
       [-0.00489799, -0.01097342,  0.04960367, ...,  0.02456311,
        -0.02724419,  0.05444816],
       ...,
       [ 0.01083178,  0.00377315,  0.03533736, ...,  0.02576538,
        -0.00498205, -0.00877949],
       [-0.00542006,  0.01948387, -0.03249473, ...,  0.00250671,
         0.03089188,  0.00638196],
       [-0.00214792, -0.03957901, -0.04043011, ...,  0.02479084,
        -0.01689838,  0.01342391]], dtype=float32))}, 'Dense_6': {'bias': array([0.], dtype=float32), 'kernel': (array([3.5661101], dtype=float32), array([[ 0.0043604 ],
       [ 0.0036776 ],
       [ 0.04676168],
       [ 0.04298188],
       [-0.03367224],
       [ 0.01318703],
       [ 0.01328176],
       [-0.00586654],
       [ 0.02355884],
       [ 0.01630051],
       [-0.00876033],
       [ 0.00271832],
       [ 0.01551039],
       [-0.01787571],
       [ 0.00150253],
       [ 0.00594221],
       [ 0.03352127],
       [-0.02987412],
       [-0.00587817],
       [-0.0194116 ],
       [-0.02816255],
       [-0.02038827],
       [-0.01246835],
       [-0.02936315],
       [-0.05085169],
       [-0.02569281],
       [ 0.00487425],
       [ 0.02377806],
       [-0.02174418],
       [-0.0191799 ],
       [ 0.01020746],
       [ 0.02223462],
       [ 0.01211517],
       [ 0.01941787],
       [-0.02298921],
       [ 0.02576854],
       [-0.04360297],
       [ 0.00578184],
       [ 0.02172789],
       [-0.002075  ],
       [-0.02377489],
       [-0.02882361],
       [-0.00247701],
       [ 0.00895694],
       [ 0.00932292],
       [ 0.00700381],
       [-0.01086008],
       [ 0.01097594],
       [-0.01834791],
       [-0.03314861],
       [-0.00103415],
       [-0.01934591],
       [-0.04395323],
       [ 0.04261415],
       [-0.00454617],
       [-0.02095897],
       [ 0.05591689],
       [-0.01420845],
       [-0.00657908],
       [ 0.0205415 ],
       [ 0.00010403],
       [-0.0345441 ],
       [ 0.02375215],
       [-0.01552264],
       [-0.02493042],
       [ 0.03337017],
       [-0.02008989],
       [ 0.02271591],
       [ 0.01254173],
       [ 0.02758259],
       [ 0.03804917],
       [ 0.02450594],
       [-0.02535132],
       [-0.03752323],
       [-0.02302043],
       [ 0.03798195],
       [-0.00664901],
       [-0.03484093],
       [ 0.00298746],
       [ 0.04203968],
       [ 0.0121914 ],
       [ 0.00418505],
       [ 0.02519115],
       [ 0.03374711],
       [-0.00160842],
       [ 0.02380463],
       [-0.05118915],
       [ 0.02319116],
       [ 0.01070896],
       [-0.0107322 ],
       [ 0.00084055],
       [ 0.01840444],
       [-0.02917494],
       [-0.0052812 ],
       [ 0.02180448],
       [-0.00393739],
       [ 0.01486286],
       [ 0.01565424],
       [ 0.01255294],
       [-0.0215112 ],
       [ 0.02611693],
       [ 0.03829108],
       [-0.01511612],
       [-0.02430213],
       [ 0.0146287 ],
       [-0.01405126],
       [ 0.01331498],
       [ 0.00023084],
       [-0.01150667],
       [ 0.0052455 ],
       [ 0.01712176],
       [-0.00344685],
       [-0.04165448],
       [ 0.00513996],
       [-0.01290107],
       [-0.0542776 ],
       [ 0.02277635],
       [-0.00269759],
       [ 0.00276482],
       [ 0.03448462],
       [-0.0077602 ],
       [-0.0200391 ],
       [-0.03668032],
       [ 0.02397828],
       [ 0.01404764],
       [-0.00824297],
       [ 0.01959099],
       [ 0.03456594],
       [-0.01636182],
       [-0.03012315],
       [-0.02174498],
       [ 0.00551824],
       [ 0.00710182],
       [-0.02255194],
       [-0.01556137],
       [ 0.00209588],
       [ 0.04038307],
       [ 0.01459006],
       [-0.00926643],
       [-0.00689294],
       [ 0.0416903 ],
       [-0.00472935],
       [-0.01909331],
       [ 0.02791638],
       [-0.0141891 ],
       [-0.01329875],
       [-0.00581693],
       [ 0.02425486],
       [-0.01827841],
       [-0.02740001],
       [-0.04121201],
       [ 0.00926196],
       [ 0.01145685],
       [ 0.00973535],
       [ 0.02790119],
       [-0.05387537],
       [-0.01943595],
       [ 0.00300668],
       [ 0.02012349],
       [-0.01958048],
       [ 0.05135458],
       [ 0.01412928],
       [ 0.01959453],
       [ 0.03471271],
       [-0.04055372],
       [ 0.00750937],
       [ 0.00368398],
       [-0.0051556 ],
       [-0.00245026],
       [-0.04176421],
       [-0.02123846],
       [ 0.02133184],
       [ 0.00964558],
       [-0.02441573],
       [ 0.04819673],
       [ 0.02963068],
       [ 0.01796556],
       [-0.00920579],
       [-0.0120799 ],
       [-0.00684151],
       [ 0.01061409],
       [ 0.03793992],
       [ 0.00064205],
       [-0.02055963],
       [-0.00054941],
       [-0.02956461],
       [ 0.01537283],
       [-0.02267037],
       [-0.01276139],
       [-0.03541412],
       [-0.00768252],
       [-0.0313916 ],
       [ 0.00287957],
       [ 0.00339623],
       [-0.05393195],
       [ 0.03981163],
       [ 0.01672291],
       [ 0.00061961],
       [ 0.03960433],
       [ 0.01909567],
       [-0.0140288 ],
       [ 0.03341085],
       [ 0.02667654],
       [ 0.00729667],
       [ 0.04563819],
       [-0.01181663],
       [-0.02158626],
       [-0.01274076],
       [-0.04216151],
       [ 0.01000546],
       [-0.00574001],
       [-0.02835456],
       [ 0.00354905],
       [ 0.0017758 ],
       [-0.00181675],
       [-0.00853977],
       [-0.0314799 ],
       [-0.04753595],
       [ 0.02157631],
       [ 0.0312608 ],
       [ 0.00801285],
       [ 0.02063093],
       [-0.05087425],
       [ 0.035033  ],
       [-0.00515453],
       [-0.00354772],
       [ 0.01497379],
       [ 0.00813247],
       [ 0.02790241],
       [ 0.01770861],
       [ 0.01374016],
       [ 0.02568813],
       [ 0.04375875],
       [-0.02489476],
       [-0.02205071],
       [-0.02056919],
       [-0.00902037],
       [-0.04085252],
       [ 0.02915596],
       [ 0.01863666],
       [-0.01520948],
       [ 0.00834233],
       [ 0.01179818],
       [-0.03822297],
       [ 0.02715764],
       [-0.01470233],
       [ 0.03777877],
       [-0.01337368],
       [-0.03455585],
       [ 0.02838051],
       [-0.0303911 ],
       [-0.01459772],
       [ 0.03456803],
       [ 0.01510764],
       [ 0.00139573],
       [-0.0178226 ]], dtype=float32))}, 'Embedding_0': {'FourierEmbs_0': {'kernel': array([[ 0.5690432 ,  2.0606797 , -0.8237412 , -1.959468  ,  1.0730692 ,
         0.8063546 ,  2.1917512 , -1.982823  , -3.239842  ,  0.5682087 ,
        -1.7651777 , -1.9913766 , -0.5989799 ,  0.59283954,  1.5409335 ,
         1.2100027 , -1.0116664 , -1.4468423 , -4.9481864 ,  2.1781335 ,
         1.0358244 , -0.18348807, -0.4839333 , -1.7587863 , -1.0565921 ,
        -1.10135   , -2.3078244 ,  1.566718  ,  2.6369615 , -2.0375476 ,
        -0.31183216,  2.2282107 , -2.040078  , -0.27471775,  1.6995788 ,
        -3.0648968 , -1.6871411 ,  1.4423611 , -0.459016  , -0.19108607,
        -0.16440128, -1.3393989 , -0.66476876, -2.1984358 , -3.6566832 ,
         0.6886194 ,  0.2306571 , -1.7622842 ,  0.89971256,  0.37170067,
         0.64488953, -1.9520346 , -0.47823682,  0.47125903,  1.9437438 ,
        -2.6190825 , -0.7183037 ,  0.5609466 , -0.7592278 , -0.67029375,
         2.1107275 , -1.2879184 ,  1.8366692 , -1.1516138 , -3.373048  ,
         0.01814853,  1.1384624 ,  3.5151374 , -2.6061213 , -4.384113  ,
         2.0385766 , -0.6796304 ,  3.028666  ,  1.4214803 ,  0.75137645,
        -0.42806885,  1.4608232 , -1.3032165 , -1.6148919 , -1.5263531 ,
        -0.8124456 ,  2.0098655 , -1.6005733 ,  1.826653  ,  0.43069273,
         1.1944668 , -1.4913981 ,  2.7789602 , -2.1355364 , -0.10195608,
        -5.418976  , -2.3774755 , -0.752947  ,  1.7811099 ,  1.8862767 ,
         3.4900172 ,  2.3388746 , -1.3009272 , -1.3474116 ,  0.62469697,
         1.2832524 , -0.6366857 , -0.02302214,  2.050187  , -0.7658958 ,
        -1.7650473 ,  0.5319646 ,  2.7975566 , -0.17621191,  2.6109304 ,
        -0.25305536,  3.3676155 ,  1.5587364 , -1.4635797 ,  0.2778772 ,
        -0.9656143 , -2.1057928 ,  0.46831262,  2.7558565 , -0.18443394,
        -2.8437536 , -0.5737205 , -2.7613685 , -1.2469981 ,  2.7490208 ,
        -4.749783  ,  1.3453985 ,  0.14224158],
       [ 2.8303146 , -1.0972128 ,  0.6255486 ,  0.7369334 ,  1.9928591 ,
         0.7857923 , -2.2461898 , -1.0013752 , -0.16962658,  2.877945  ,
         2.711953  ,  0.6984224 , -3.3027225 , -2.0155818 ,  4.8548346 ,
         2.3090186 , -1.3016546 ,  0.13980259,  2.924929  ,  2.6956172 ,
        -0.1646837 ,  0.16775684,  1.3355188 ,  1.1085061 ,  0.7813611 ,
         0.62774175,  1.9707768 ,  3.80239   , -1.4866656 , -0.976297  ,
        -0.4216787 , -1.1759087 , -0.8482812 , -0.6194109 , -1.089189  ,
         1.100641  , -2.0607262 ,  0.04496997,  1.6878369 ,  3.503891  ,
        -0.16860338, -1.0123675 , -0.8344602 , -1.145493  , -0.45361266,
        -2.7996    , -0.91339636, -0.94961965,  1.6871176 ,  0.68228734,
         2.0074134 , -2.3327124 ,  0.7900873 ,  2.3939161 ,  0.57264423,
         3.0727253 , -0.664093  , -0.8749076 ,  0.8155609 , -0.5349218 ,
        -1.9264189 ,  0.8163948 , -0.23838387, -0.5540343 , -4.2406077 ,
         3.1337938 ,  3.178261  ,  0.13384825, -3.3811657 ,  1.9035361 ,
         0.97714835,  1.0635353 , -1.5455998 , -5.234678  , -1.7638232 ,
         0.49466735, -2.056905  ,  1.1184394 ,  0.28123084, -4.356337  ,
         1.5103047 ,  1.9819201 ,  1.876698  ,  3.5487099 ,  2.8234196 ,
         0.0412429 ,  0.29250753,  3.8553138 , -0.68652683,  3.9896154 ,
         1.2561433 , -1.7582277 ,  0.511394  , -0.7681715 ,  1.1896453 ,
         1.3127977 ,  1.9605563 ,  3.0354156 , -0.10919864,  0.9320614 ,
        -1.1954911 , -3.9589133 ,  2.6031165 ,  5.7313704 , -1.5119063 ,
        -1.4194058 ,  2.024135  ,  0.71662587,  0.91622806,  3.0736325 ,
        -0.45324045,  0.5253896 ,  2.4048886 ,  0.68830997,  0.10384199,
        -0.6418154 , -0.21358396,  0.02011003,  2.220502  ,  0.16686267,
        -1.1852582 , -0.79326886,  1.2228701 , -4.3441873 , -0.57449275,
        -0.84782416, -0.5272293 ,  0.3052101 ],
       [-2.1114664 ,  1.0206349 ,  2.1063218 , -1.284554  , -0.2164644 ,
         2.020936  , -0.5386392 , -0.18320002,  1.7565734 , -1.7833976 ,
        -0.8895714 , -4.18449   , -1.4335268 , -0.7729733 , -0.7924885 ,
        -1.3019603 , -0.96940744, -2.2532375 , -2.9711046 , -3.1097238 ,
         0.63091356, -0.81009275,  2.2034063 , -0.15352839, -0.2948675 ,
         0.95392287, -0.26880068,  1.4217318 , -2.6897953 , -1.8508276 ,
        -1.3114337 ,  0.93737614,  1.2380401 ,  2.5522215 , -2.9441543 ,
         4.5816994 , -2.963119  ,  2.0064623 , -0.7251802 ,  0.8656932 ,
         2.890173  , -0.39528942, -1.6979493 ,  0.9898256 , -2.342601  ,
        -2.2062426 ,  3.977496  , -1.4871273 , -1.1007831 ,  0.99093235,
         0.9080186 ,  0.8252068 ,  1.9283391 , -0.6914822 ,  0.08067832,
        -0.25774541, -0.02940534,  3.6756148 ,  0.15101498, -1.2269545 ,
         0.0792961 , -0.62401146, -3.5174432 ,  4.4938283 , -3.1261058 ,
        -1.2994182 ,  1.6144296 ,  1.420648  , -1.2806568 ,  0.26176986,
         0.5437922 ,  0.02925084, -1.3608341 , -0.90760756, -1.3830925 ,
        -4.38609   ,  2.4790223 , -3.505413  ,  0.8263574 ,  1.4172729 ,
         3.5435667 ,  0.60109824, -2.3703384 ,  0.41129053,  2.5442483 ,
        -0.7255778 ,  1.0933014 ,  0.2841844 ,  1.6405185 , -1.606726  ,
         2.3484788 , -1.1363503 , -0.9027902 , -1.4865687 , -0.7988023 ,
         0.9833704 ,  1.8090056 , -3.5505328 ,  2.6867905 , -2.628532  ,
         2.894615  , -1.123585  ,  0.38504514,  2.7244337 ,  0.88570523,
        -1.1433524 ,  1.0184693 , -1.6579462 ,  2.7886746 , -4.3348823 ,
        -2.3403418 , -0.9104172 ,  1.6369537 ,  0.98485374, -2.7026377 ,
        -1.0143713 ,  1.8946989 , -0.16980171, -4.8092027 ,  2.7470977 ,
         2.059475  ,  1.5909361 , -3.4543169 , -1.8031551 , -2.137151  ,
        -1.4744321 , -0.74275786, -0.5759297 ]], dtype=float32)}}}} [[ 0.03564382  0.53721094]
 [ 0.04724181  0.46314383]
 [ 0.5123509   0.43833232]
 ...
 [ 0.94736814 -0.5991144 ]
 [ 0.19805002  0.19868898]
 [ 0.526489    0.23382616]]
0.25182843
0.2954843
0.15772223
0.21121626
0.25243732
0.28196055
0.3211736
[22:56:30 - main - INFO] --------------------------
[22:56:30 - main - INFO] Iter:   0    Time: 8.441
[22:56:30 - main - INFO] -----------  -------------
[22:56:30 - main - INFO] ics_loss     3.909e-01
[22:56:30 - main - INFO] res_loss     7.404e+00
[22:56:30 - main - INFO] l2_error     1.294e+00
{'params': {'Dense_0': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_1': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_2': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_3': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_4': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_5': {'bias': Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,256])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,256])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,256])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,256]), None)
    recipe = LambdaBinding())}, 'Dense_6': {'bias': Traced<ShapedArray(float32[1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[1]), None)
    recipe = LambdaBinding(), 'kernel': (Traced<ShapedArray(float32[1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[1]), None)
    recipe = LambdaBinding(), Traced<ShapedArray(float32[256,1])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[256,1])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[256,1])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[256,1]), None)
    recipe = LambdaBinding())}, 'Embedding_0': {'FourierEmbs_0': {'kernel': Traced<ShapedArray(float32[3,128])>with<JVPTrace(level=2/1)> with
  primal = Traced<ShapedArray(float32[3,128])>with<DynamicJaxprTrace(level=0/1)>
  tangent = Traced<ShapedArray(float32[3,128])>with<JaxprTrace(level=1/1)> with
    pval = (ShapedArray(float32[3,128]), None)
    recipe = LambdaBinding()}}}} Traced<ShapedArray(float32[1024,2])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>
I1012 22:56:32.177651 8441426496 checkpoints.py:570] Saving checkpoint at step: 2
I1012 22:56:32.177941 8441426496 checkpoints.py:658] Using Orbax as backend to save Flax checkpoints. For potential troubleshooting see: https://flax.readthedocs.io/en/latest/guides/training_techniques/use_checkpointing.html#orbax-as-backend-troubleshooting
I1012 22:56:32.178052 8441426496 abstract_checkpointer.py:35] orbax-checkpoint version: 0.6.4
I1012 22:56:32.178233 8441426496 checkpointer.py:189] [process=0] Started saving checkpoint to /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.
I1012 22:56:32.178682 8441426496 utils.py:240] [process=0][thread=MainThread] Skipping global process sync, barrier name: create_tmp_directory:pre.checkpoint_2.1
I1012 22:56:32.179034 8441426496 atomicity.py:175] Creating tmp directory /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0
I1012 22:56:32.179661 8441426496 checkpoint.py:134] Wrote CheckpointMetadata=CheckpointMetadata(init_timestamp_nsecs=1728788192179368000, commit_timestamp_nsecs=None), json={"init_timestamp_nsecs": 1728788192179368000, "commit_timestamp_nsecs": null} to /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0
I1012 22:56:32.179788 8441426496 utils.py:240] [process=0][thread=MainThread] Skipping global process sync, barrier name: create_tmp_directory:post.checkpoint_2.2
I1012 22:56:32.187003 8441426496 base_pytree_checkpoint_handler.py:108] [process=0] /jax/checkpoint/write/blocking_bytes_per_sec: 690.3 MiB/s (total bytes: 4.5 MiB) (time elapsed: 6 milliseconds) (per-host)
I1012 22:56:32.206118 8441426496 future.py:88] ChainedFuture completed 2/2 futures in 0.02 seconds.
I1012 22:56:32.206269 8441426496 base_pytree_checkpoint_handler.py:108] [process=0] /jax/checkpoint/write/bytes_per_sec: 175.7 MiB/s (total bytes: 4.5 MiB) (time elapsed: 25 milliseconds) (per-host)
I1012 22:56:32.206554 8441426496 utils.py:240] [process=0][thread=MainThread] Skipping global process sync, barrier name: Checkpointer:save.checkpoint_2
I1012 22:56:32.213727 8441426496 type_handlers.py:562] [process=0][thread=MainThread] Validating params (raw input=144, unique=72) in TensorStore KvStore: KvStore({
  'base': {
    'driver': 'file',
    'path': '/Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0/',
  },
  'cache_pool': 'cache_pool#ocdbt',
  'config': {
    'compression': {'id': 'zstd'},
    'max_decoded_node_bytes': 100000000,
    'max_inline_value_bytes': 1024,
    'uuid': '367dda7f483f0f916c63385e1f482afb',
    'version_tree_arity_log2': 4,
  },
  'context': {
    'cache_pool#ocdbt': {'total_bytes_limit': 100000000},
    'data_copy_concurrency': {},
    'file_io_concurrency': {'limit': 128},
    'file_io_sync': True,
    'ocdbt_coordinator': {},
  },
  'driver': 'ocdbt',
  'experimental_read_coalescing_interval': '1ms',
  'experimental_read_coalescing_merged_bytes': 500000000000,
  'experimental_read_coalescing_threshold_bytes': 1000000,
}).
I1012 22:56:32.214231 8441426496 atomicity.py:316] Renaming /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0 to /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2
I1012 22:56:32.214438 8441426496 checkpoint.py:174] Read CheckpointMetadata=CheckpointMetadata(init_timestamp_nsecs=1728788192179368000, commit_timestamp_nsecs=None) from /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0
I1012 22:56:32.214745 8441426496 checkpoint.py:191] Updated CheckpointMetadata=CheckpointMetadata(init_timestamp_nsecs=1728788192179368000, commit_timestamp_nsecs=1728788192214309000) to /Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2.orbax-checkpoint-tmp-0
I1012 22:56:32.215163 8441426496 atomicity.py:518] [process=0][thread=MainThread] Finished saving checkpoint (finalized tmp dir) to `/Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/default/ckpt/checkpoint_2`.
I1012 22:56:32.215227 8441426496 utils.py:240] [process=0][thread=MainThread] Skipping global process sync, barrier name: Checkpointer:finalize.checkpoint_2
[{'Dense_0': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_1': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_2': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_3': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_4': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_5': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_6': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>}, {'Dense_0': array(0.25182843, dtype=float32), 'Dense_1': array(0.2954843, dtype=float32), 'Dense_2': array(0.15772223, dtype=float32), 'Dense_3': array(0.21121626, dtype=float32), 'Dense_4': array(0.25243732, dtype=float32), 'Dense_5': array(0.28196055, dtype=float32), 'Dense_6': array(0.3211736, dtype=float32)}, {'Dense_0': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_1': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_2': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_3': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_4': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_5': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_6': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>}]
[{'Dense_0': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_1': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_2': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_3': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_4': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_5': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_6': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>}, {'Dense_0': array(0.25182843, dtype=float32), 'Dense_1': array(0.2954843, dtype=float32), 'Dense_2': array(0.15772223, dtype=float32), 'Dense_3': array(0.21121626, dtype=float32), 'Dense_4': array(0.25243732, dtype=float32), 'Dense_5': array(0.28196055, dtype=float32), 'Dense_6': array(0.3211736, dtype=float32)}, {'Dense_0': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_1': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_2': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_3': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_4': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_5': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>, 'Dense_6': Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=0/1)>}]
Traceback (most recent call last):
  File "/Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/main.py", line 42, in <module>
    app.run(main)
  File "/Users/ananyaebhartari/Documents/Paris/My_pirate/.venv1/lib/python3.11/site-packages/absl/app.py", line 308, in run
    _run_main(main, args)
  File "/Users/ananyaebhartari/Documents/Paris/My_pirate/.venv1/lib/python3.11/site-packages/absl/app.py", line 254, in _run_main
    sys.exit(main(argv))
             ^^^^^^^^^^
  File "/Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/main.py", line 34, in main
    train.train_and_evaluate(FLAGS.config, FLAGS.workdir)
  File "/Users/ananyaebhartari/Documents/Paris/My_pirate/jaxpi/examples/allen_cahn/train.py", line 143, in train_and_evaluate
    json.dump(serializable_layer_grad_direction, f, indent=4)
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/__init__.py", line 179, in dump
    for chunk in iterable:
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/encoder.py", line 430, in _iterencode
    yield from _iterencode_list(o, _current_indent_level)
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/encoder.py", line 326, in _iterencode_list
    yield from chunks
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        ^^^^^^^^^^^
  File "/Users/ananyaebhartari/miniconda3/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DynamicJaxprTracer is not JSON serializable
